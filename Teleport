-- Services
local Players = game:GetService("Players")
local Chat = game:GetService("Chat")
local RunService = game:GetService("RunService")

-- Print message indicating the script has been executed
print("Script has been executed successfully.")

-- Helper function to teleport the local player to another player
local function teleportToPlayer(targetPlayer)
    local localPlayer = Players.LocalPlayer
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        localPlayer.Character:SetPrimaryPartCFrame(targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)) -- Slightly above the target to avoid collision
        print("Teleported to " .. targetPlayer.Name)
    else
        print("Target player is not available or their character is missing.")
    end
end

-- Function to handle chat messages
local function onChatMessage(message, player)
    print("Received message: " .. message) -- Debug: Show received chat message
    -- Check if the message starts with ".teleport "
    if message:sub(1, 10) == ".teleport " then
        local username = message:sub(11)
        if username and username ~= "" then
            print("Searching for player with username starting with: " .. username) -- Debug: Show username being searched
            -- Find the player by username or partial username
            local players = Players:GetPlayers()
            local targetPlayer = nil
            for _, p in ipairs(players) do
                if p.Name:lower():sub(1, #username):lower() == username:lower() then
                    targetPlayer = p
                    break
                end
            end
            
            if targetPlayer then
                -- Ensure the teleportation happens with consideration of network latency and game restrictions
                local success, err = pcall(function()
                    teleportToPlayer(targetPlayer)
                end)
                if not success then
                    print("Failed to teleport: " .. err)
                end
            else
                print("No player found with username starting with: " .. username)
            end
        else
            print("Username is empty.")
        end
    end
end

-- Connect chat message handler
Chat.Chatted:Connect(onChatMessage)
