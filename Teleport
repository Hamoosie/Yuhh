-- Function to handle chat commands
local function onChatMessage(player, message)
    local command, arg = message:match("^(%S+)%s*(.*)")

    if command == "!teleport" then
        -- Execute teleport command
        print(player.Name .. " wants to teleport to " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local targetCharacter = targetPlayer.Character
            local character = player.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart and targetHumanoidRootPart then
                    humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame
                end
            end
        end

    elseif command == "!esp" then
        -- Execute ESP command
        print(player.Name .. " wants to enable ESP.")
        for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
            if targetPlayer.Character then
                addESPToCharacter(targetPlayer.Character)
            end
        end

    elseif command == "!knock" then
        -- Execute knock command
        print(player.Name .. " wants to knock " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local character = player.Character
            local targetCharacter = targetPlayer.Character

            -- Check if the Combat tool is in Backpack
            local combatTool = player.Backpack:FindFirstChild("Combat")
            
            if combatTool then
                -- Equip the combat tool
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:EquipTool(combatTool)
                    
                    -- Move to the target
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
                    
                    if humanoidRootPart and targetHumanoidRootPart then
                        -- Continuously adjust position behind the target player
                        while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
                            humanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame - targetPlayer.Character.HumanoidRootPart.CFrame.LookVector * 2
                            wait(0.1)
                            -- Spam the knock action
                            local args = {
                                [1] = "ChargeButton"
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
                        end
                    else
                        print("HumanoidRootPart not found.")
                    end
                else
                    print("Humanoid not found in character.")
                end
            else
                print("Combat tool not found in Backpack.")
            end
        else
            print("Target player or character not found.")
        end

    elseif command == "!bring" then
        -- Execute bring command
        print(player.Name .. " wants to bring " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        local character = player.Character
        local originalPosition = character and character:FindFirstChild("HumanoidRootPart") and character.HumanoidRootPart.CFrame

        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local targetCharacter = targetPlayer.Character
            local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")

            if character and targetHumanoidRootPart then
                -- Knock the target player
                character:SetPrimaryPartCFrame(targetHumanoidRootPart.CFrame - targetCharacter.HumanoidRootPart.CFrame.LookVector * 2)
                wait(0.1)
                
                -- Spam knock action
                local combatTool = player.Backpack:FindFirstChild("Combat")
                if combatTool then
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid:EquipTool(combatTool)
                        
                        while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
                            character:SetPrimaryPartCFrame(targetPlayer.Character.HumanoidRootPart.CFrame - targetPlayer.Character.HumanoidRootPart.CFrame.LookVector * 2)
                            wait(0.1)
                            local args = {
                                [1] = "ChargeButton"
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
                            
                            -- Check if the target player is knocked
                            local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                            if targetHumanoid and targetHumanoid.Health <= 0 then
                                break
                            end
                        end
                        
                        -- Teleport to the target player after knocking
                        character:SetPrimaryPartCFrame(targetCharacter.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)) -- Adjust as needed
                        wait(0.1)
                        
                        -- Run the code after knocking
                        local args = {
                            [1] = "Grabbing",
                            [2] = false
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
                        
                        -- Return to original position
                        if originalPosition then
                            character:SetPrimaryPartCFrame(originalPosition)
                            wait(0.1)
                            
                            -- Run the grabbing code again after returning
                            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
                        end
                    end
                end
            end
        else
            print("Target player or character not found.")
        end

    elseif command == "!unknock" then
        -- Stop knocking
        print(player.Name .. " stopped knocking.")

    elseif command == "!autostomp" then
        -- Execute autostomp command
        print(player.Name .. " wants to autostomp.")
        -- Add autostomp logic here

    elseif command == "!unautostomp" then
        -- Stop autostomp
        print(player.Name .. " stopped autostomping.")

    elseif command == "!view" then
        -- Execute view command
        print(player.Name .. " wants to view " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer then
            -- Viewing logic here
            local character = player.Character
            local targetCharacter = targetPlayer.Character
            if targetCharacter then
                game.Workspace.CurrentCamera.CameraSubject = targetCharacter:FindFirstChild("Humanoid") or targetCharacter
            end
        end

    elseif command == "!unview" then
        -- Stop viewing
        print(player.Name .. " stopped viewing.")
        game.Workspace.CurrentCamera.CameraSubject = player.Character
    end
end

-- Listen for PlayerAdded event
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end)

-- For players who are already in the game
for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end

-- Update ESP for new players and character changes
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Ensure character is fully loaded
        addESPToCharacter(character)
    end)
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Ensure character is fully loaded
        addESPToCharacter(character)
    end)
end
