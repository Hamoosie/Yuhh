-- Function to add ESP to a character
local function addESPToCharacter(character)
    if character:FindFirstChild("HumanoidRootPart") then
        -- Create a BillboardGui for ESP
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "ESP"
        billboardGui.AlwaysOnTop = true
        billboardGui.Size = UDim2.new(0, 100, 0, 100)
        billboardGui.StudsOffset = Vector3.new(0, 2, 0)

        -- Create a TextLabel for the player's name
        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboardGui
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = character.Name
        textLabel.TextColor3 = Color3.new(math.random(), math.random(), math.random()) -- Random color
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 14

        -- Add the BillboardGui to the character
        billboardGui.Parent = character.HumanoidRootPart

        -- Create a Highlight for outlining the character
        local highlight = Instance.new("Highlight")
        highlight.Name = "Outline"
        highlight.Adornee = character
        highlight.OutlineColor = Color3.fromRGB(0, 255, 0) -- Change the color as needed
        highlight.FillColor = Color3.fromRGB(0, 0, 0) -- Optional, set the fill color if needed
        highlight.Parent = character
    end
end

-- Function to handle chat commands
local function onChatMessage(player, message)
    local command, arg = message:match("^(%S+)%s*(.*)")
    
    if command == "!teleport" then
        -- Execute teleport command
        print(player.Name .. " wants to teleport to " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local targetCharacter = targetPlayer.Character
            local character = player.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart and targetHumanoidRootPart then
                    humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame
                end
            end
        end

    elseif command == "!esp" then
        -- Execute ESP command
        print(player.Name .. " wants to enable ESP.")
        for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
            if targetPlayer.Character then
                addESPToCharacter(targetPlayer.Character)
            end
        end

    elseif command == "!knock" then
        -- Execute knock command
        print(player.Name .. " wants to knock " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local character = player.Character
            local targetCharacter = targetPlayer.Character

            -- Check if the Combat tool is in Backpack
            local combatTool = player.Backpack:FindFirstChild("Combat")
            
            if combatTool then
                -- Equip the combat tool
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:EquipTool(combatTool)
                    
                    -- Teleport and follow target player
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
                    
                    if humanoidRootPart and targetHumanoidRootPart then
                        -- Resize target's hitbox
                        local targetHumanoid = targetCharacter:FindFirstChildOfClass("Humanoid")
                        if targetHumanoid then
                            targetHumanoid.BodyWidthScale.Value = 2 -- Example value
                            targetHumanoid.BodyHeightScale.Value = 2 -- Example value
                            targetHumanoid.BodyDepthScale.Value = 2 -- Example value
                        end

                        -- Follow target and keep inside
                        local following = true
                        while following do
                            -- Teleport behind target and keep facing them
                            wait(0.1) -- Short delay before next attack to spam effectively
                            
                            -- Spam knock action
                            local args = {
                                [1] = "ChargeButton"
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))

                            -- Calculate direction to teleport precisely behind the target
                            local direction = (targetHumanoidRootPart.Position - humanoidRootPart.Position).Unit
                            local offset = direction * -2 -- Negative offset to be directly behind the player
                            local targetPosition = targetHumanoidRootPart.Position + offset
                            
                            -- Teleport and face the target
                            humanoidRootPart.CFrame = CFrame.new(targetPosition, targetHumanoidRootPart.Position)
                            
                            -- Check if target is knocked (low health) and stop if so
                            if targetHumanoid and targetHumanoid.Health < 10 then
                                print(targetPlayer.Name .. " is knocked.")
                                following = false
                                
                                -- Restore target's hitbox
                                targetHumanoid.BodyWidthScale.Value = 1
                                targetHumanoid.BodyHeightScale.Value = 1
                                targetHumanoid.BodyDepthScale.Value = 1
                            end
                        end
                    else
                        print("HumanoidRootPart not found.")
                    end
                else
                    print("Humanoid not found in character.")
                end
            else
                print("Combat tool not found in Backpack.")
            end
        else
            print("Target player or character not found.")
        end

    elseif command == "!unknock" then
        -- Stop knocking
        print(player.Name .. " stopped knocking.")

    elseif command == "!autostomp" then
        -- Execute autostomp command
        print(player.Name .. " wants to autostomp.")
        -- Add autostomp logic here

    elseif command == "!unautostomp" then
        -- Stop autostomp
        print(player.Name .. " stopped autostomping.")

    elseif command == "!view" then
        -- Execute view command
        print(player.Name .. " wants to view " .. arg)
        local targetPlayer = nil
        arg = arg:lower()
        
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1, #arg) == arg then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer then
            -- Viewing logic here
            local character = player.Character
            local targetCharacter = targetPlayer.Character
            if targetCharacter then
                game.Workspace.CurrentCamera.CameraSubject = targetCharacter:FindFirstChild("Humanoid") or targetCharacter
            end
        end

    elseif command == "!unview" then
        -- Stop viewing
        print(player.Name .. " stopped viewing.")
        game.Workspace.CurrentCamera.CameraSubject = player.Character
    end
end

-- Listen for PlayerAdded event
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end)

-- For players who are already in the game
for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end

-- Update ESP for new players and character changes
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Ensure character is fully loaded
        addESPToCharacter(character)
    end)
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Ensure character is fully loaded
        addESPToCharacter(character)
    end)
end
