local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create a RemoteEvent in ReplicatedStorage
local remoteEvent = Instance.new("RemoteEvent")
remoteEvent.Name = "PortalEvent"
remoteEvent.Parent = ReplicatedStorage

-- Create a RemoteFunction for teleportation
local teleportFunction = Instance.new("RemoteFunction")
teleportFunction.Name = "TeleportFunction"
teleportFunction.Parent = ReplicatedStorage

-- Function to create a portal
local function createPortal(position, color)
    local portal = Instance.new("Part")
    portal.Size = Vector3.new(5, 10, 1)
    portal.Anchored = true
    portal.CanCollide = false
    portal.CFrame = CFrame.new(position)
    portal.BrickColor = BrickColor.new(color)
    portal.Parent = workspace
    return portal
end

-- Function to teleport player
local function teleportPlayer(player, portal)
    local character = player.Character
    local destinationPortal = portal == workspace:FindFirstChild("Portal1") and workspace:FindFirstChild("Portal2") or workspace:FindFirstChild("Portal1")
    if destinationPortal and character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = destinationPortal.CFrame + Vector3.new(0, 5, 0)
    end
end

-- Handle RemoteFunction for teleportation
teleportFunction.OnServerInvoke = function(player, portal)
    teleportPlayer(player, portal)
end

-- Handle RemoteEvent for portal creation and reset
remoteEvent.OnServerEvent:Connect(function(player, action, position)
    if action == "createPortal1" then
        if workspace:FindFirstChild("Portal1") then workspace:FindFirstChild("Portal1"):Destroy() end
        local portal1 = createPortal(position, "Bright blue")
        portal1.Name = "Portal1"
    elseif action == "createPortal2" then
        if workspace:FindFirstChild("Portal2") then workspace:FindFirstChild("Portal2"):Destroy() end
        local portal2 = createPortal(position, "Bright orange")
        portal2.Name = "Portal2"
    elseif action == "resetPortals" then
        if workspace:FindFirstChild("Portal1") then workspace:FindFirstChild("Portal1"):Destroy() end
        if workspace:FindFirstChild("Portal2") then workspace:FindFirstChild("Portal2"):Destroy() end
    end
end)

-- Client-side script
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Create the Portal Gun
local backpack = player.Backpack
local portalGun = Instance.new("Tool")
portalGun.Name = "Portal Gun"
portalGun.RequiresHandle = false
portalGun.CanBeDropped = false
portalGun.Parent = backpack

-- GUI for reset button
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local resetButton = Instance.new("TextButton")
resetButton.Size = UDim2.new(0, 100, 0, 50)
resetButton.Position = UDim2.new(0, 10, 0, 10)
resetButton.Text = "Reset Portals"
resetButton.Parent = screenGui

-- Mouse click event to shoot portals
portalGun.Activated:Connect(function()
    if not workspace:FindFirstChild("Portal1") then
        remoteEvent:FireServer("createPortal1", mouse.Hit.p)
    elseif not workspace:FindFirstChild("Portal2") then
        remoteEvent:FireServer("createPortal2", mouse.Hit.p)
    end
end)

-- Connect reset button
resetButton.MouseButton1Click:Connect(function()
    remoteEvent:FireServer("resetPortals")
end)

-- Teleport player when touching portals
workspace.ChildAdded:Connect(function(child)
    if child.Name == "Portal1" or child.Name == "Portal2" then
        child.Touched:Connect(function(hit)
            local character = hit.Parent
            if character and character:FindFirstChild("Humanoid") then
                teleportFunction:InvokeServer(child)
            end
        end)
    end
end)
