-- Create UI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TeleportButton = Instance.new("TextButton")
local KnockButton = Instance.new("TextButton")
local AutoStompButton = Instance.new("TextButton")
local ViewButton = Instance.new("TextButton")
local ToggleButton = Instance.new("TextButton")
local CashDropButton = Instance.new("TextButton")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "TeleportGui"

Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 200, 0, 350) -- Adjusted height to accommodate new button
Frame.Position = UDim2.new(0, 0, 0.5, -150)
Frame.Visible = false -- Start with the menu hidden

TextBox.Parent = Frame
TextBox.Size = UDim2.new(0, 140, 0, 50)
TextBox.Position = UDim2.new(0, 0, 0, 0)
TextBox.PlaceholderText = "Enter Player Name"
TextBox.Text = ""

TeleportButton.Parent = Frame
TeleportButton.Size = UDim2.new(0, 60, 0, 50)
TeleportButton.Position = UDim2.new(0, 140, 0, 0)
TeleportButton.Text = "Teleport"

KnockButton.Parent = Frame
KnockButton.Size = UDim2.new(0, 60, 0, 50)
KnockButton.Position = UDim2.new(0, 140, 0, 50)
KnockButton.Text = "Knock"

AutoStompButton.Parent = Frame
AutoStompButton.Size = UDim2.new(0, 60, 0, 50)
AutoStompButton.Position = UDim2.new(0, 140, 0, 100)
AutoStompButton.Text = "Auto Stomp"
AutoStompButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (off)

ViewButton.Parent = Frame
ViewButton.Size = UDim2.new(0, 60, 0, 50)
ViewButton.Position = UDim2.new(0, 140, 0, 150)
ViewButton.Text = "View"
ViewButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (off)

CashDropButton.Parent = Frame
CashDropButton.Size = UDim2.new(0, 60, 0, 50)
CashDropButton.Position = UDim2.new(0, 140, 0, 200)
CashDropButton.Text = "Cash Drop"

ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 60, 0, 50)
ToggleButton.Position = UDim2.new(0, 0, 0.5, -200)
ToggleButton.Text = "Toggle Menu"

local teleporting = false
local knockActive = false
local autoStompActive = false
local targetPlayer = nil
local spectating = false

local function teleportToPlayer(partialName)
    local foundPlayer = nil
    partialName = partialName:lower()

    -- Iterate through all players to find a match
    for _, player in ipairs(game.Players:GetPlayers()) do
        if string.sub(player.Name:lower(), 1, #partialName) == partialName then
            foundPlayer = player
            break
        end
    end

    if foundPlayer then
        targetPlayer = foundPlayer
        local character = game.Players.LocalPlayer.Character
        local targetCharacter = foundPlayer.Character

        if character and targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
            -- Teleport very close to the target and make sure character faces the target
            local targetPosition = targetCharacter.HumanoidRootPart.Position + targetCharacter.HumanoidRootPart.CFrame.LookVector * -0.1 -- Adjusted closer
            character:SetPrimaryPartCFrame(CFrame.new(targetPosition, targetCharacter.HumanoidRootPart.Position))
            teleporting = true
        else
            targetPlayer = nil
            knockActive = false -- Stop knocking if player not found
        end
    else
        targetPlayer = nil
        knockActive = false -- Stop knocking if player not found
    end
end

local function activateCombatTool()
    local backpack = game.Players.LocalPlayer.Backpack
    local tool = backpack:FindFirstChild("Combat")
    if tool then
        -- Equip the tool
        tool.Parent = game.Players.LocalPlayer.Character
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:EquipTool(tool)
        end
    end
end

local function knockBehindPlayer()
    if targetPlayer then
        activateCombatTool()
        knockActive = true
        while knockActive and targetPlayer do
            local character = game.Players.LocalPlayer.Character
            local targetCharacter = targetPlayer.Character

            if character and targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                -- Precisely position behind the player
                local targetPosition = targetCharacter.HumanoidRootPart.Position + targetCharacter.HumanoidRootPart.CFrame.LookVector * -0.1 -- Adjusted for accuracy
                local characterPosition = character.HumanoidRootPart.Position
                local targetDirection = (targetCharacter.HumanoidRootPart.Position - characterPosition).unit
                character:SetPrimaryPartCFrame(CFrame.new(targetPosition, targetCharacter.HumanoidRootPart.Position))
                wait(0.1)
                local args = {
                    [1] = "ChargeButton"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
            else
                break
            end
        end
    end
end

local function startAutoStomp()
    while autoStompActive do
        local args = {
            [1] = "Stomp"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
        wait(0.5) -- Adjust the wait time as needed
    end
end

local function toggleView()
    if targetPlayer then
        local character = game.Players.LocalPlayer.Character
        local targetCharacter = targetPlayer.Character

        if not spectating then
            -- Start spectating the player
            if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.CameraMode = Enum.CameraMode.Classic
                game.Workspace.CurrentCamera.CameraSubject = targetCharacter:FindFirstChild("Humanoid") or targetCharacter
                spectating = true
                ViewButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green (on)
            end
        else
            -- Stop spectating
            game.Players.LocalPlayer.CameraMode = Enum.CameraMode.Classic
            game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
            spectating = false
            ViewButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (off)
        end
    end
end

local function cashDrop()
    if targetPlayer then
        local args = {
            [1] = "DropMoney",
            [2] = "10000"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
end)

TeleportButton.MouseButton1Click:Connect(function()
    local partialName = TextBox.Text
    if partialName and partialName ~= "" then
        teleportToPlayer(partialName)
    end
end)

KnockButton.MouseButton1Click:Connect(function()
    local partialName = TextBox.Text
    if partialName and partialName ~= "" then
        if targetPlayer and targetPlayer.Name:lower():sub(1, #partialName) == partialName:lower() then
            if not knockActive then
                activateCombatTool()
                knockBehindPlayer()
            else
                knockActive = false
            end
        else
            local oldTargetPlayer = targetPlayer
            teleportToPlayer(partialName) -- Update target player
            if targetPlayer and targetPlayer ~= oldTargetPlayer then
                activateCombatTool()
                knockBehindPlayer()
            end
        end
    end
end)

AutoStompButton.MouseButton1Click:Connect(function()
    autoStompActive = not autoStompActive
    if autoStompActive then
        AutoStompButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green (on)
        startAutoStomp()
    else
        AutoStompButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (off)
    end
end)

ViewButton.MouseButton1Click:Connect(function()
    toggleView()
end)

CashDropButton.MouseButton1Click:Connect(function()
cashDrop()
end)
