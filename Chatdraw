-- Variables
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui", playerGui)
local drawingArea = Instance.new("Frame", screenGui)
local chatButton = Instance.new("TextButton", screenGui)
local squares = {}
local selectedSquares = {}

-- Setup Drawing Area
drawingArea.Size = UDim2.new(0, 200, 1, 0)
drawingArea.Position = UDim2.new(1, -200, 0, 0)
drawingArea.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
drawingArea.BackgroundTransparency = 0.5
drawingArea.Visible = true -- Ensure the drawing area is visible

-- Create Draggable Squares
for i = 1, 25 do
    local square = Instance.new("Frame", drawingArea)
    square.Size = UDim2.new(0, 30, 0, 30)
    square.Position = UDim2.new((i-1) % 5 * 0.2, 0, math.floor((i-1) / 5) * 0.2, 0)
    square.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    square.BorderColor3 = Color3.fromRGB(0, 0, 0)

    square.MouseButton1Click:Connect(function()
        if not selectedSquares[square] then
            selectedSquares[square] = true
            square.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Selected color
        else
            selectedSquares[square] = nil
            square.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Deselect
        end
    end)

    table.insert(squares, square)
end

-- Chat Button
chatButton.Size = UDim2.new(0, 100, 0, 50)
chatButton.Position = UDim2.new(0.5, -50, 0.9, 0)
chatButton.Text = "Chat"
chatButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

chatButton.MouseButton1Click:Connect(function()
    local chatMessage = ""
    for i = 1, 5 do
        for j = 1, 5 do
            local index = (i-1) * 5 + j
            if selectedSquares[squares[index]] then
                chatMessage = chatMessage .. "⚫️"
            else
                chatMessage = chatMessage .. "⚪️"
            end
        end
        chatMessage = chatMessage .. "\n"
    end

    -- Send chat message
    local success, errorMessage = pcall(function()
        game:GetService("ReplicatedStorage").DefaultChatSystemChat:Chat(player.Character.Head, chatMessage)
    end)

    if not success then
        print("Error sending chat: " .. errorMessage)
    end
end)

-- Ensure the ScreenGui is visible
screenGui.Enabled = true
